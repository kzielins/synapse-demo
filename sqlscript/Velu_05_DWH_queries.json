{
	"name": "Velu_05_DWH_queries",
	"properties": {
		"description": "Explore DWH ",
		"content": {
			"query": " -- query Internet sales \n -- aprox count vs precise count - 2% diff\n SELECT d.CalendarYear AS CalendarYear,\n     APPROX_COUNT_DISTINCT(i.SalesOrderNumber) AS Aprox_Orders ,COUNT(DISTINCT i.SalesOrderNumber) AS Orders\n FROM velu.FactInternetSales AS i\n JOIN velu.DimDate AS d ON i.OrderDateKey = d.DateKey\n GROUP BY d.CalendarYear\n ORDER BY CalendarYear;\n\n \n\n-- sales by year,month\n SELECT  d.CalendarYear AS Year,\n         d.MonthNumberOfYear AS Month,\n         SUM(i.SalesAmount) AS InternetSalesAmount\n FROM velu.FactInternetSales AS i\n JOIN velu.DimDate AS d ON i.OrderDateKey = d.DateKey\n GROUP BY d.CalendarYear, d.MonthNumberOfYear\n ORDER BY Year, Month;\n\n\n --- DWH snowdlake \n --- sales by year, produc categgory region, sum sales\n\n SELECT  d.CalendarYear AS Year,\n         pc.EnglishProductCategoryName AS ProductCategory,\n         g.EnglishCountryRegionName AS Region,\n         SUM(i.SalesAmount) AS InternetSalesAmount\n FROM velu.FactInternetSales AS i\n JOIN velu.DimDate AS d ON i.OrderDateKey = d.DateKey\n JOIN velu.DimCustomer AS c ON i.CustomerKey = c.CustomerKey\n JOIN velu.DimGeography AS g ON c.GeographyKey = g.GeographyKey\n JOIN velu.DimProduct AS p ON i.ProductKey = p.ProductKey\n JOIN velu.DimProductSubcategory AS ps ON p.ProductSubcategoryKey = ps.ProductSubcategoryKey\n JOIN velu.DimProductCategory AS pc ON ps.ProductCategoryKey = pc.ProductCategoryKey\n GROUP BY d.CalendarYear, pc.EnglishProductCategoryName, g.EnglishCountryRegionName\n ORDER BY Year, ProductCategory, Region;\n\n\n\n --- region sales  with rank DESCending \n select * from (\n    SELECT  g.EnglishCountryRegionName AS Region,\n            ROW_NUMBER() OVER(PARTITION BY g.EnglishCountryRegionName\n                            ORDER BY i.SalesAmount DESC) AS RowNumber,\n            i.SalesOrderNumber AS OrderNo,\n            i.SalesOrderLineNumber AS LineItem,\n            i.SalesAmount AS SalesAmount,\n            SUM(i.SalesAmount) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionTotal,\n            AVG(i.SalesAmount) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionAverage\n    FROM velu.FactInternetSales AS i\n    JOIN velu.DimDate AS d ON i.OrderDateKey = d.DateKey\n    JOIN velu.DimCustomer AS c ON i.CustomerKey = c.CustomerKey\n    JOIN velu.DimGeography AS g ON c.GeographyKey = g.GeographyKey\n    )g\n where RowNumber=1\n ORDER BY Region\n\n\n --- rank the cities in each region based on their total sales amount:\n  SELECT  g.EnglishCountryRegionName AS Region,\n         g.City,\n         SUM(i.SalesAmount) AS CityTotal,\n         SUM(SUM(i.SalesAmount)) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionTotal,\n         RANK() OVER(PARTITION BY g.EnglishCountryRegionName\n                     ORDER BY SUM(i.SalesAmount) DESC) AS RegionalRank\n FROM velu.FactInternetSales AS i\n JOIN velu.DimDate AS d ON i.OrderDateKey = d.DateKey\n JOIN velu.DimCustomer AS c ON i.CustomerKey = c.CustomerKey\n JOIN velu.DimGeography AS g ON c.GeographyKey = g.GeographyKey\n GROUP BY g.EnglishCountryRegionName, g.City\n ORDER BY Region;\n\n\n\n\n ",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLPool01",
				"poolName": "SQLPool01"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}