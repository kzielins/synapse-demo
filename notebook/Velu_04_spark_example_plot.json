{
	"name": "Velu_04_spark_example_plot",
	"properties": {
		"description": "salse order sun by orderyear\n\nExample plots",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3c9798b8-2be2-4f82-bad6-c5fc90d67283"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/bf55d59f-9a89-4c29-9b5f-a906c8355065/resourceGroups/data-engineering-synapse-19hvmew/providers/Microsoft.Synapse/workspaces/asaworkspace19hvmew/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://asaworkspace19hvmew.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Sales order sum by orderyear (price+quantity)+tax\r\n",
					"\r\n",
					"Example plots"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					" %%pyspark\r\n",
					" from pyspark.sql.types import *\r\n",
					" from pyspark.sql.functions import *\r\n",
					"\r\n",
					"# read from csv - not serverless\r\n",
					" orderSchema = StructType([\r\n",
					"     StructField(\"SalesOrderNumber\", StringType()),\r\n",
					"     StructField(\"SalesOrderLineNumber\", IntegerType()),\r\n",
					"     StructField(\"OrderDate\", DateType()),\r\n",
					"     StructField(\"CustomerName\", StringType()),\r\n",
					"     StructField(\"Email\", StringType()),\r\n",
					"     StructField(\"Item\", StringType()),\r\n",
					"     StructField(\"Quantity\", IntegerType()),\r\n",
					"     StructField(\"UnitPrice\", FloatType()),\r\n",
					"     StructField(\"Tax\", FloatType())\r\n",
					"     ])\r\n",
					"\r\n",
					" df = spark.read.load('abfss://files@asadatalake19hvmew.dfs.core.windows.net/sales/orders/*.csv', format='csv', schema=orderSchema)\r\n",
					" display(df.limit(100))"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					" df.printSchema()"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df.createOrReplaceTempView(\"salesorders\")\r\n",
					"spark_df = spark.sql(\"SELECT * FROM salesorders\")\r\n",
					"display(spark_df)"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					" %%sql\r\n",
					" SELECT YEAR(OrderDate) AS OrderYear,\r\n",
					"        SUM((UnitPrice * Quantity) + Tax) AS GrossRevenue\r\n",
					" FROM salesorders\r\n",
					" GROUP BY YEAR(OrderDate)\r\n",
					" ORDER BY OrderYear;"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM salesorders"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sqlQuery = \"SELECT CAST(YEAR(OrderDate) AS CHAR(4)) AS OrderYear, \\\r\n",
					"                 SUM((UnitPrice * Quantity) + Tax) AS GrossRevenue \\\r\n",
					"             FROM salesorders \\\r\n",
					"             GROUP BY CAST(YEAR(OrderDate) AS CHAR(4)) \\\r\n",
					"             ORDER BY OrderYear\"\r\n",
					"df_spark = spark.sql(sqlQuery)\r\n",
					"df_spark.show()"
				],
				"execution_count": 31
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"PlotLib"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from matplotlib import pyplot as plt\r\n",
					"\r\n",
					"# Pandas dataframe\r\n",
					"df_sales = df_spark.toPandas()\r\n",
					"\r\n",
					"\r\n",
					"plt.bar(x=df_sales['OrderYear'], height=df_sales['GrossRevenue'])\r\n",
					"\r\n",
					"# show\r\n",
					"plt.show()"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import seaborn as sns\r\n",
					"# Clear the plot area\r\n",
					"plt.clf()\r\n",
					"\r\n",
					"# Create a bar chart\r\n",
					"ax = sns.barplot(x=\"OrderYear\", y=\"GrossRevenue\", data=df_sales)\r\n",
					"plt.show()"
				],
				"execution_count": 41
			}
		]
	}
}